generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model accounts {
  ID_ACCOUNTS      Int    @id @default(autoincrement())
  EMAIL            String @db.VarChar(50)
  PASSWORD_ACCOUNT String @db.VarChar(100)
  STATE            String @db.Char(2)
  persons          persons?   @relation(fields: [ID_PERSON], references: [ID_PERSON])
  ID_PERSON        Int
}

model brands {
  ID_BRAND   Int    @id
  NAME_BRAND String @unique(map: "BR_UQ_NO") @db.VarChar(50)
  products products[]
}

model clinic_histories {
  ID_CLINIC_HISTORY Int    @id
  NAME_PATIENT      String @db.VarChar(50)
  product_tracings product_tracings[]
}

model dependencies {
  ID_DEPARTMENT   Int    @id @default(autoincrement())
  DEPARTMENT_NAME String @unique(map: "DE_UQ_DE") @db.VarChar(50)
  TYPE_DEPARTMENT String @db.Char(1)
  history_item history_item[]
  item item[]
  person_dependencies person_dependencies[]
}

model feature_products {
  ID_FEATURE         Int       @id @default(autoincrement())
  EXPIRATION_DATE    DateTime  @db.Date
  QUANTITY_PER_UNIT  Int
  PRICE_PER_UNIT     Int
  INVIMA             String    @db.VarChar(50)
  MANUFACTURING_DATE DateTime? @db.Date
  item item[]
}

model history_item {
  item              item?   @relation(fields: [ID_ITEM], references: [ID_ITEM])
  ID_ITEM           Int
  dependencies      dependencies?   @relation(fields: [ID_DEPARTMENT], references: [ID_DEPARTMENT]) 
  ID_DEPARTMENT     Int
  DATE_HISTORY_ITEM DateTime? @default(now()) @db.Timestamp(0)
  QUANTITY          Int
  ID_USER           Int
  @@id([ID_ITEM, ID_DEPARTMENT])
}

model history_user {
  ID_HISTORY  Int       @id @default(autoincrement())
  DATE_CREATE DateTime? @default(now()) @db.Timestamp(0)
  DESCRIPTION_HISTORY_USER String @db.VarChar(1024)
}

model item {
  ID_ITEM       Int    @id @default(autoincrement())
  PRESENTATION  String @db.Char(2)
  QUANTITY      Int
  products      products?   @relation(fields: [ID_PRODUCT], references: [ID_PRODUCT])
  ID_PRODUCT    Int
  feature_products      feature_products?   @relation(fields: [ID_FEATURE], references: [ID_FEATURE])
  ID_FEATURE    Int
  dependencies      dependencies?   @relation(fields: [ID_DEPARTMENT], references: [ID_DEPARTMENT])
  ID_DEPARTMENT Int
  history_item history_item[]
  product_tracings product_tracings[]
}

model persons {
  ID_PERSON       Int    @id @default(autoincrement())
  FULL_NAME       String @db.VarChar(50)
  DOCUMENT_TYPE   String @db.Char(2)
  DOCUMENT        String @db.VarChar(20)
  GENDER          String @db.Char(2)
  STATE           String @db.Char(2)
  PROFESSIONAL_ID String @db.VarChar(20) @default("null")  
  accounts accounts[]
  user_roles user_roles[]
  product_tracings product_tracings[]
  person_dependencies person_dependencies[]
}

model product_tracings {
  ID_PRODUCT_TC       Int    @default(autoincrement())
  persons      persons?   @relation(fields: [ID_PERSON], references: [ID_PERSON]) 
  ID_PERSON         Int
  item    item?   @relation(fields: [ID_ITEM], references: [ID_ITEM])
  ID_ITEM           Int
  clinic_histories    clinic_histories?   @relation(fields: [ID_CLINIC_HISTORY], references: [ID_CLINIC_HISTORY])
  ID_CLINIC_HISTORY Int?
  QUANTITY_USED     Int
  UNIT_MEASUREMENT  String @db.Char(2)
  DESTINY_SERVICE   String @db.Char(2)
  DATE_PRODUCT_TRACING DateTime @db.DateTime(0)
  @@id([ID_PRODUCT_TC,ID_PERSON, ID_ITEM])
}

model products {
  ID_PRODUCT        Int    @id
  brands    brands?   @relation(fields: [ID_BRAND], references: [ID_BRAND])
  ID_BRAND          Int
  PRODUCT_NAME      String @unique(map: "PR_UQ_PN") @db.VarChar(50)
  MEASUREMENT_UNITS String @db.Char(2)
  TYPE_PRODUCT      String @db.Char(2)
  item item[]
}

model roles {
  ID_ROL          Int    @id @default(autoincrement())
  NAME_ROL        String @db.VarChar(50)
  DESCRIPTION_ROL String @db.VarChar(1024)
  STATE_ROL       String @db.Char(2)
  user_roles user_roles[]
}


model user_roles {
  roles    roles?   @relation(fields: [ID_ROL], references: [ID_ROL])
  ID_ROL    Int
  persons    persons?   @relation(fields: [ID_PERSON], references: [ID_PERSON])
  ID_PERSON Int
  STATE     String @db.Char(2)
  @@id([ID_ROL, ID_PERSON])
}

model person_dependencies {
  persons    persons?   @relation(fields: [ID_PERSON], references: [ID_PERSON])
  ID_PERSON Int
  dependencies    dependencies?   @relation(fields: [ID_DEPARTMENT], references: [ID_DEPARTMENT])
  ID_DEPARTMENT   Int
  STATE     String @db.Char(2)
  DATE_PERSON_DEPENDENCIES DateTime @db.DateTime(0)
  @@id([ID_PERSON, ID_DEPARTMENT])
}